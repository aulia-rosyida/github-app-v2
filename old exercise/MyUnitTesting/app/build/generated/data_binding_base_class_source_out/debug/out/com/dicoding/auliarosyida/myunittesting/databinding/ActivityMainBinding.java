// Generated by view binder compiler. Do not edit!
package com.dicoding.auliarosyida.myunittesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.dicoding.auliarosyida.myunittesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCalculateCircumference;

  @NonNull
  public final Button btnCalculateSurfaceArea;

  @NonNull
  public final Button btnCalculateVolume;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText edtHeight;

  @NonNull
  public final EditText edtLength;

  @NonNull
  public final EditText edtWidth;

  @NonNull
  public final TextView tvResult;

  private ActivityMainBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnCalculateCircumference, @NonNull Button btnCalculateSurfaceArea,
      @NonNull Button btnCalculateVolume, @NonNull Button btnSave, @NonNull EditText edtHeight,
      @NonNull EditText edtLength, @NonNull EditText edtWidth, @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.btnCalculateCircumference = btnCalculateCircumference;
    this.btnCalculateSurfaceArea = btnCalculateSurfaceArea;
    this.btnCalculateVolume = btnCalculateVolume;
    this.btnSave = btnSave;
    this.edtHeight = edtHeight;
    this.edtLength = edtLength;
    this.edtWidth = edtWidth;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_calculate_circumference;
      Button btnCalculateCircumference = rootView.findViewById(id);
      if (btnCalculateCircumference == null) {
        break missingId;
      }

      id = R.id.btn_calculate_surface_area;
      Button btnCalculateSurfaceArea = rootView.findViewById(id);
      if (btnCalculateSurfaceArea == null) {
        break missingId;
      }

      id = R.id.btn_calculate_volume;
      Button btnCalculateVolume = rootView.findViewById(id);
      if (btnCalculateVolume == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.edt_height;
      EditText edtHeight = rootView.findViewById(id);
      if (edtHeight == null) {
        break missingId;
      }

      id = R.id.edt_length;
      EditText edtLength = rootView.findViewById(id);
      if (edtLength == null) {
        break missingId;
      }

      id = R.id.edt_width;
      EditText edtWidth = rootView.findViewById(id);
      if (edtWidth == null) {
        break missingId;
      }

      id = R.id.tv_result;
      TextView tvResult = rootView.findViewById(id);
      if (tvResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnCalculateCircumference,
          btnCalculateSurfaceArea, btnCalculateVolume, btnSave, edtHeight, edtLength, edtWidth,
          tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
